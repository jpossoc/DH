{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\posho\\\\Desktop\\\\tech developer\\\\sexto bimestre\\\\front end 3\\\\final\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo, useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DoctStates = /*#__PURE__*/createContext();\nconst themes = {\n  dark: {\n    theme: false,\n    bgColor: \"black\",\n    color: \"white\"\n  },\n  light: {\n    theme: true,\n    bgColor: \"white\",\n    color: \"black\"\n  }\n};\nexport const initialThemeState = themes.light;\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"SWITCH_DARK\":\n      return themes.dark;\n\n    case \"SWITCH_LIGHT\":\n      return themes.light;\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [doctList, setDoctList] = useState([]);\n  const url = \"https://jsonplaceholder.typicode.com/users/\";\n  const [themeState, themeDispatch] = useReducer(themeReducer, initialThemeState);\n  const memoizedValue = useMemo(() => {\n    return {\n      doctList,\n      setDoctList\n    };\n  }, [doctList]);\n  const memoizedThemeState = useMemo(() => {\n    return {\n      themeState,\n      themeDispatch\n    };\n  }, [themeState]);\n  useEffect(() => {\n    const fetchDoct = async () => {\n      let res = await fetch(url);\n      let data = await res.json();\n      setDoctList(data.results);\n    };\n\n    fetchDoct();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DoctStates.Provider, {\n    value: memoizedValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"gwQkgb1mWeRaYYQolMiK0rApMmQ=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useDoctStates = () => {\n  _s2();\n\n  return useContext(DoctStates);\n};\n\n_s2(useDoctStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useReducer","useState","DoctStates","themes","dark","theme","bgColor","color","light","initialThemeState","themeReducer","state","action","type","Error","ContextProvider","children","doctList","setDoctList","url","themeState","themeDispatch","memoizedValue","memoizedThemeState","fetchDoct","res","fetch","data","json","results","useDoctStates"],"sources":["C:/Users/posho/Desktop/tech developer/sexto bimestre/front end 3/final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import {createContext, useContext, useEffect, useMemo, useReducer, useState} from \"react\";\r\n\r\nexport const DoctStates = createContext();\r\n\r\nconst themes = {\r\n    dark: {\r\n        theme: false,\r\n        bgColor: \"black\",\r\n        color: \"white\",\r\n    },\r\n    light: {\r\n        theme: true,\r\n        bgColor: \"white\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport const initialThemeState = themes.light;\r\n\r\nconst themeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SWITCH_DARK\":\r\n            return themes.dark;\r\n        case \"SWITCH_LIGHT\":\r\n            return themes.light;\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n    const [doctList, setDoctList] = useState([]);\r\n    const url = \"https://jsonplaceholder.typicode.com/users/\";\r\n    const [themeState, themeDispatch] = useReducer(themeReducer, initialThemeState);\r\n\r\n    const memoizedValue = useMemo(() => {\r\n        return { doctList, setDoctList };\r\n    }, [doctList]);\r\n\r\n    const memoizedThemeState = useMemo(() => {\r\n        return { themeState, themeDispatch };\r\n    }, [themeState]);\r\n\r\n    useEffect(() => {\r\n        const fetchDoct = async () => {\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n            setDoctList(data.results);\r\n        };\r\n        fetchDoct();\r\n    }, []);\r\n\r\n    return (\r\n        <DoctStates.Provider value={memoizedValue}>\r\n            {children}\r\n        </DoctStates.Provider>\r\n    );\r\n};\r\n\r\nexport default ContextProvider;\r\n\r\nexport const useDoctStates = () => useContext(DoctStates)\r\n"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,OAA9C,EAAuDC,UAAvD,EAAmEC,QAAnE,QAAkF,OAAlF;;AAEA,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAhC;AAEP,MAAMO,MAAM,GAAG;EACXC,IAAI,EAAE;IACFC,KAAK,EAAE,KADL;IAEFC,OAAO,EAAE,OAFP;IAGFC,KAAK,EAAE;EAHL,CADK;EAMXC,KAAK,EAAE;IACHH,KAAK,EAAE,IADJ;IAEHC,OAAO,EAAE,OAFN;IAGHC,KAAK,EAAE;EAHJ;AANI,CAAf;AAaA,OAAO,MAAME,iBAAiB,GAAGN,MAAM,CAACK,KAAjC;;AAEP,MAAME,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,aAAL;MACI,OAAOV,MAAM,CAACC,IAAd;;IACJ,KAAK,cAAL;MACI,OAAOD,MAAM,CAACK,KAAd;;IACJ;MACI,MAAM,IAAIM,KAAJ,EAAN;EANR;AAQH,CATD;;AAWA,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC7C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMkB,GAAG,GAAG,6CAAZ;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,UAAU,CAACU,YAAD,EAAeD,iBAAf,CAA9C;EAEA,MAAMa,aAAa,GAAGvB,OAAO,CAAC,MAAM;IAChC,OAAO;MAAEkB,QAAF;MAAYC;IAAZ,CAAP;EACH,CAF4B,EAE1B,CAACD,QAAD,CAF0B,CAA7B;EAIA,MAAMM,kBAAkB,GAAGxB,OAAO,CAAC,MAAM;IACrC,OAAO;MAAEqB,UAAF;MAAcC;IAAd,CAAP;EACH,CAFiC,EAE/B,CAACD,UAAD,CAF+B,CAAlC;EAIAtB,SAAS,CAAC,MAAM;IACZ,MAAM0B,SAAS,GAAG,YAAY;MAC1B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAD,CAArB;MACA,IAAIQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAV,WAAW,CAACS,IAAI,CAACE,OAAN,CAAX;IACH,CAJD;;IAKAL,SAAS;EACZ,CAPQ,EAON,EAPM,CAAT;EASA,oBACI,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAEF,aAA5B;IAAA,UACKN;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA3BM;;GAAMD,e;;KAAAA,e;AA6Bb,eAAeA,eAAf;AAEA,OAAO,MAAMe,aAAa,GAAG;EAAA;;EAAA,OAAMjC,UAAU,CAACK,UAAD,CAAhB;AAAA,CAAtB;;IAAM4B,a"},"metadata":{},"sourceType":"module"}